"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_";
exports.ids = ["vendor-chunks/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/detectProvider.js":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/detectProvider.js ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectProvider: () => (/* binding */ detectProvider),\n/* harmony export */   isSnapSupported: () => (/* binding */ isSnapSupported)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction isSnapSupported(provider) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            yield provider.request({ method: 'wallet_getSnaps' });\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    });\n}\nfunction detectProvider() {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const provider = window.ethereum;\n            if (!provider) {\n                return null;\n            }\n            if (provider.providers && Array.isArray(provider.providers)) {\n                const providers = provider.providers;\n                for (const provider of providers) {\n                    if (yield isSnapSupported(provider)) {\n                        return provider;\n                    }\n                }\n            }\n            if (provider.detected && Array.isArray(provider.detected)) {\n                const providers = provider.detected;\n                for (const provider of providers) {\n                    if (yield isSnapSupported(provider)) {\n                        return provider;\n                    }\n                }\n            }\n            if (yield isSnapSupported(provider)) {\n                return provider;\n            }\n            return null;\n        }\n        catch (error) {\n            console.error(error);\n            return null;\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNvbGZsYXJlLXdhbGxldCttZXRhbWFzay1zZGtAMS4wLjNfQHNvbGFuYSt3ZWIzLmpzQDEuOTguMF9idWZmZXJ1dGlsQDQuMC45X2VuY29kaW5nQDAuMS4xM191dGYtOC12YWxpZGF0ZUA1LjAuMTBfL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L21ldGFtYXNrLXNkay9saWIvZXNtL2RldGVjdFByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsaUJBQWlCLFNBQUksSUFBSSxTQUFJO0FBQzdCLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0EscUNBQXFDLDJCQUEyQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2N1c3RvbWVyLTEvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNvbGZsYXJlLXdhbGxldCttZXRhbWFzay1zZGtAMS4wLjNfQHNvbGFuYSt3ZWIzLmpzQDEuOTguMF9idWZmZXJ1dGlsQDQuMC45X2VuY29kaW5nQDAuMS4xM191dGYtOC12YWxpZGF0ZUA1LjAuMTBfL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L21ldGFtYXNrLXNkay9saWIvZXNtL2RldGVjdFByb3ZpZGVyLmpzPzRhMWQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5leHBvcnQgZnVuY3Rpb24gaXNTbmFwU3VwcG9ydGVkKHByb3ZpZGVyKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHlpZWxkIHByb3ZpZGVyLnJlcXVlc3QoeyBtZXRob2Q6ICd3YWxsZXRfZ2V0U25hcHMnIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZXRlY3RQcm92aWRlcigpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcHJvdmlkZXIgPSB3aW5kb3cuZXRoZXJldW07XG4gICAgICAgICAgICBpZiAoIXByb3ZpZGVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocHJvdmlkZXIucHJvdmlkZXJzICYmIEFycmF5LmlzQXJyYXkocHJvdmlkZXIucHJvdmlkZXJzKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHByb3ZpZGVycyA9IHByb3ZpZGVyLnByb3ZpZGVycztcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHByb3ZpZGVyIG9mIHByb3ZpZGVycykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoeWllbGQgaXNTbmFwU3VwcG9ydGVkKHByb3ZpZGVyKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3ZpZGVyO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHByb3ZpZGVyLmRldGVjdGVkICYmIEFycmF5LmlzQXJyYXkocHJvdmlkZXIuZGV0ZWN0ZWQpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcHJvdmlkZXJzID0gcHJvdmlkZXIuZGV0ZWN0ZWQ7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBwcm92aWRlciBvZiBwcm92aWRlcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHlpZWxkIGlzU25hcFN1cHBvcnRlZChwcm92aWRlcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm92aWRlcjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh5aWVsZCBpc1NuYXBTdXBwb3J0ZWQocHJvdmlkZXIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb3ZpZGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/detectProvider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/index.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/index.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StandardSolflareMetaMaskWalletAccount: () => (/* reexport safe */ _standard_account__WEBPACK_IMPORTED_MODULE_5__.StandardSolflareMetaMaskWalletAccount),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/.pnpm/@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10/node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/.pnpm/eventemitter3@5.0.1/node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/.pnpm/bs58@5.0.0/node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/utils.js\");\n/* harmony import */ var _detectProvider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./detectProvider */ \"(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/detectProvider.js\");\n/* harmony import */ var _standard_account__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./standard/account */ \"(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/account.js\");\n/* harmony import */ var _standard_solana__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./standard/solana */ \"(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/solana.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/types.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\n\nclass SolflareMetaMask extends eventemitter3__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(config) {\n        super();\n        this._network = 'mainnet-beta';\n        this._iframeParams = {};\n        this._element = null;\n        this._iframe = null;\n        this._publicKey = null;\n        this._account = null;\n        this._isConnected = false;\n        this._connectHandler = null;\n        this._messageHandlers = {};\n        this._handleEvent = (event) => {\n            var _a, _b;\n            switch (event.type) {\n                case 'connect': {\n                    this._collapseIframe();\n                    if ((_a = event.data) === null || _a === void 0 ? void 0 : _a.publicKey) {\n                        this._publicKey = event.data.publicKey;\n                        this._isConnected = true;\n                        if (this._connectHandler) {\n                            this._connectHandler.resolve();\n                            this._connectHandler = null;\n                        }\n                        this._connected();\n                    }\n                    else {\n                        if (this._connectHandler) {\n                            this._connectHandler.reject();\n                            this._connectHandler = null;\n                        }\n                        this._disconnected();\n                    }\n                    return;\n                }\n                case 'disconnect': {\n                    if (this._connectHandler) {\n                        this._connectHandler.reject();\n                        this._connectHandler = null;\n                    }\n                    this._disconnected();\n                    return;\n                }\n                case 'accountChanged': {\n                    if ((_b = event.data) === null || _b === void 0 ? void 0 : _b.publicKey) {\n                        this._publicKey = event.data.publicKey;\n                        this.emit('accountChanged', this.publicKey);\n                        this._standardConnected();\n                    }\n                    else {\n                        this.emit('accountChanged', undefined);\n                        this._standardDisconnected();\n                    }\n                    return;\n                }\n                default: {\n                    return;\n                }\n            }\n        };\n        this._handleResize = (data) => {\n            if (data.resizeMode === 'full') {\n                if (data.params.mode === 'fullscreen') {\n                    this._expandIframe();\n                }\n                else if (data.params.mode === 'hide') {\n                    this._collapseIframe();\n                }\n            }\n            else if (data.resizeMode === 'coordinates') {\n                this._resizeIframe(data.params);\n            }\n        };\n        this._handleMessage = (event) => {\n            var _a;\n            if (((_a = event.data) === null || _a === void 0 ? void 0 : _a.channel) !== 'solflareIframeToWalletAdapter') {\n                return;\n            }\n            const data = event.data.data || {};\n            if (data.type === 'event') {\n                this._handleEvent(data.event);\n            }\n            else if (data.type === 'resize') {\n                this._handleResize(data);\n            }\n            else if (data.type === 'response') {\n                if (this._messageHandlers[data.id]) {\n                    const { resolve, reject } = this._messageHandlers[data.id];\n                    delete this._messageHandlers[data.id];\n                    if (data.error) {\n                        reject(data.error);\n                    }\n                    else {\n                        resolve(data.result);\n                    }\n                }\n            }\n        };\n        this._removeElement = () => {\n            if (this._element) {\n                this._element.remove();\n                this._element = null;\n            }\n        };\n        this._removeDanglingElements = () => {\n            const elements = document.getElementsByClassName('solflare-metamask-wallet-adapter-iframe');\n            for (const element of elements) {\n                if (element.parentElement) {\n                    element.remove();\n                }\n            }\n        };\n        this._injectElement = () => {\n            this._removeElement();\n            this._removeDanglingElements();\n            const params = Object.assign(Object.assign({}, this._iframeParams), { mm: true, v: 1, cluster: this._network || 'mainnet-beta', origin: window.location.origin || '', title: document.title || '' });\n            const queryString = Object.keys(params)\n                .map((key) => `${key}=${encodeURIComponent(params[key])}`)\n                .join('&');\n            const iframeUrl = `${SolflareMetaMask.IFRAME_URL}?${queryString}`;\n            this._element = document.createElement('div');\n            this._element.className = 'solflare-metamask-wallet-adapter-iframe';\n            this._element.innerHTML = `\n      <iframe src='${iframeUrl}' style='position: fixed; top: 0; bottom: 0; left: 0; right: 0; width: 100%; height: 100%; border: none; border-radius: 0; z-index: 99999; color-scheme: auto;' allowtransparency='true'></iframe>\n    `;\n            document.body.appendChild(this._element);\n            this._iframe = this._element.querySelector('iframe');\n            window.addEventListener('message', this._handleMessage, false);\n        };\n        this._collapseIframe = () => {\n            if (this._iframe) {\n                this._iframe.style.top = '';\n                this._iframe.style.right = '';\n                this._iframe.style.height = '2px';\n                this._iframe.style.width = '2px';\n            }\n        };\n        this._expandIframe = () => {\n            if (this._iframe) {\n                this._iframe.style.top = '0px';\n                this._iframe.style.bottom = '0px';\n                this._iframe.style.left = '0px';\n                this._iframe.style.right = '0px';\n                this._iframe.style.width = '100%';\n                this._iframe.style.height = '100%';\n            }\n        };\n        this._resizeIframe = (params) => {\n            if (!this._iframe) {\n                return;\n            }\n            this._iframe.style.top = isFinite(params.top) ? `${params.top}px` : '';\n            this._iframe.style.bottom = isFinite(params.bottom) ? `${params.bottom}px` : '';\n            this._iframe.style.left = isFinite(params.left) ? `${params.left}px` : '';\n            this._iframe.style.right = isFinite(params.right) ? `${params.right}px` : '';\n            this._iframe.style.width = isFinite(params.width)\n                ? `${params.width}px`\n                : params.width;\n            this._iframe.style.height = isFinite(params.height)\n                ? `${params.height}px`\n                : params.height;\n        };\n        this._sendIframeMessage = (data) => {\n            if (!this.connected || !this.publicKey) {\n                throw new Error('Wallet not connected');\n            }\n            return new Promise((resolve, reject) => {\n                var _a, _b;\n                const messageId = (0,uuid__WEBPACK_IMPORTED_MODULE_8__[\"default\"])();\n                this._messageHandlers[messageId] = { resolve, reject };\n                (_b = (_a = this._iframe) === null || _a === void 0 ? void 0 : _a.contentWindow) === null || _b === void 0 ? void 0 : _b.postMessage({\n                    channel: 'solflareWalletAdapterToIframe',\n                    data: Object.assign({ id: messageId }, data)\n                }, '*');\n            });\n        };\n        this._connected = () => {\n            this._isConnected = true;\n            this.emit('connect', this.publicKey);\n            this._standardConnected();\n        };\n        this._disconnected = () => {\n            this._publicKey = null;\n            this._isConnected = false;\n            window.removeEventListener('message', this._handleMessage, false);\n            this._removeElement();\n            this.emit('disconnect');\n            this._standardDisconnected();\n        };\n        this._standardConnected = () => {\n            if (!this.publicKey) {\n                return;\n            }\n            const address = this.publicKey.toString();\n            if (!this._account || this._account.address !== address) {\n                this._account = new _standard_account__WEBPACK_IMPORTED_MODULE_5__.StandardSolflareMetaMaskWalletAccount({\n                    address,\n                    publicKey: this.publicKey.toBytes()\n                });\n                this.emit('standard_change', { accounts: this.standardAccounts });\n            }\n        };\n        this._standardDisconnected = () => {\n            if (this._account) {\n                this._account = null;\n                this.emit('standard_change', { accounts: this.standardAccounts });\n            }\n        };\n        if (config === null || config === void 0 ? void 0 : config.network) {\n            this._network = config === null || config === void 0 ? void 0 : config.network;\n        }\n        if (window.SolflareMetaMaskParams) {\n            this._iframeParams = Object.assign(Object.assign({}, this._iframeParams), window.SolflareMetaMaskParams);\n        }\n        if (config === null || config === void 0 ? void 0 : config.params) {\n            this._iframeParams = Object.assign(Object.assign({}, this._iframeParams), config === null || config === void 0 ? void 0 : config.params);\n        }\n    }\n    get publicKey() {\n        return this._publicKey ? new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(this._publicKey) : null;\n    }\n    get standardAccount() {\n        return this._account;\n    }\n    get standardAccounts() {\n        return this._account ? [this._account] : [];\n    }\n    get isConnected() {\n        return this._isConnected;\n    }\n    get connected() {\n        return this.isConnected;\n    }\n    get autoApprove() {\n        return false;\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.connected) {\n                return;\n            }\n            this._injectElement();\n            yield new Promise((resolve, reject) => {\n                this._connectHandler = { resolve, reject };\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._sendIframeMessage({\n                method: 'disconnect'\n            });\n            this._disconnected();\n        });\n    }\n    signTransaction(transaction) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected || !this.publicKey) {\n                throw new Error('Wallet not connected');\n            }\n            try {\n                const serializedTransaction = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.serializeTransaction)(transaction);\n                const response = yield this._sendIframeMessage({\n                    method: 'signTransactionV2',\n                    params: {\n                        transaction: bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(serializedTransaction)\n                    }\n                });\n                const { transaction: signedTransaction } = response;\n                return (0,_utils__WEBPACK_IMPORTED_MODULE_3__.isLegacyTransactionInstance)(transaction) ? _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction.from(bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(signedTransaction)) : _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.VersionedTransaction.deserialize(bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(signedTransaction));\n            }\n            catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || 'Failed to sign transaction');\n            }\n        });\n    }\n    signAllTransactions(transactions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected || !this.publicKey) {\n                throw new Error('Wallet not connected');\n            }\n            try {\n                const serializedTransactions = transactions.map((transaction) => (0,_utils__WEBPACK_IMPORTED_MODULE_3__.serializeTransaction)(transaction));\n                const { transactions: signedTransactions } = yield this._sendIframeMessage({\n                    method: 'signAllTransactionsV2',\n                    params: {\n                        transactions: serializedTransactions.map((transaction) => bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(transaction))\n                    }\n                });\n                return signedTransactions.map((signedTransaction, index) => {\n                    return (0,_utils__WEBPACK_IMPORTED_MODULE_3__.isLegacyTransactionInstance)(transactions[index]) ? _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction.from(bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(signedTransaction)) : _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.VersionedTransaction.deserialize(bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(signedTransaction));\n                });\n            }\n            catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || 'Failed to sign transactions');\n            }\n        });\n    }\n    signAndSendTransaction(transaction, options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected || !this.publicKey) {\n                throw new Error('Wallet not connected');\n            }\n            try {\n                const serializedTransaction = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.serializeTransaction)(transaction);\n                const { signature } = yield this._sendIframeMessage({\n                    method: 'signAndSendTransaction',\n                    params: {\n                        transaction: bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(serializedTransaction),\n                        options\n                    }\n                });\n                return signature;\n            }\n            catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || 'Failed to sign and send transaction');\n            }\n        });\n    }\n    signMessage(data, display = 'utf8') {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected || !this.publicKey) {\n                throw new Error('Wallet not connected');\n            }\n            try {\n                const { signature } = yield this._sendIframeMessage({\n                    method: 'signMessage',\n                    params: {\n                        data: bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(data),\n                        display\n                    }\n                });\n                return Uint8Array.from(bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(signature));\n            }\n            catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || 'Failed to sign message');\n            }\n        });\n    }\n    sign(data, display = 'utf8') {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.signMessage(data, display);\n        });\n    }\n    static isSupported() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = yield (0,_detectProvider__WEBPACK_IMPORTED_MODULE_4__.detectProvider)();\n            return !!provider;\n        });\n    }\n    standardSignAndSendTransaction(...inputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected)\n                throw new Error('not connected');\n            const outputs = [];\n            if (inputs.length === 1) {\n                const { transaction, account, chain, options } = inputs[0];\n                const { minContextSlot, preflightCommitment, skipPreflight, maxRetries } = options || {};\n                if (account !== this._account)\n                    throw new Error('invalid account');\n                if (!(0,_standard_solana__WEBPACK_IMPORTED_MODULE_6__.isSolanaChain)(chain))\n                    throw new Error('invalid chain');\n                const signature = yield this.signAndSendTransaction(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.VersionedTransaction.deserialize(transaction), {\n                    preflightCommitment,\n                    minContextSlot,\n                    maxRetries,\n                    skipPreflight\n                });\n                outputs.push({ signature: bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(signature) });\n            }\n            else if (inputs.length > 1) {\n                for (const input of inputs) {\n                    outputs.push(...(yield this.standardSignAndSendTransaction(input)));\n                }\n            }\n            return outputs;\n        });\n    }\n    standardSignTransaction(...inputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected)\n                throw new Error('not connected');\n            const outputs = [];\n            if (inputs.length === 1) {\n                const { transaction, account, chain } = inputs[0];\n                if (account !== this._account)\n                    throw new Error('invalid account');\n                if (chain && !(0,_standard_solana__WEBPACK_IMPORTED_MODULE_6__.isSolanaChain)(chain))\n                    throw new Error('invalid chain');\n                const signedTransaction = yield this.signTransaction(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.VersionedTransaction.deserialize(transaction));\n                outputs.push({ signedTransaction: signedTransaction.serialize() });\n            }\n            else if (inputs.length > 1) {\n                let chain;\n                for (const input of inputs) {\n                    if (input.account !== this._account)\n                        throw new Error('invalid account');\n                    if (input.chain) {\n                        if (!(0,_standard_solana__WEBPACK_IMPORTED_MODULE_6__.isSolanaChain)(input.chain))\n                            throw new Error('invalid chain');\n                        if (chain) {\n                            if (input.chain !== chain)\n                                throw new Error('conflicting chain');\n                        }\n                        else {\n                            chain = input.chain;\n                        }\n                    }\n                }\n                const transactions = inputs.map(({ transaction }) => _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.VersionedTransaction.deserialize(transaction));\n                const signedTransactions = yield this.signAllTransactions(transactions);\n                outputs.push(...signedTransactions.map((signedTransaction) => ({\n                    signedTransaction: signedTransaction.serialize()\n                })));\n            }\n            return outputs;\n        });\n    }\n    standardSignMessage(...inputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected)\n                throw new Error('not connected');\n            const outputs = [];\n            if (inputs.length === 1) {\n                const { message, account } = inputs[0];\n                if (account !== this._account)\n                    throw new Error('invalid account');\n                const signature = yield this.signMessage(message);\n                outputs.push({ signedMessage: message, signature });\n            }\n            else if (inputs.length > 1) {\n                for (const input of inputs) {\n                    outputs.push(...(yield this.standardSignMessage(input)));\n                }\n            }\n            return outputs;\n        });\n    }\n}\nSolflareMetaMask.IFRAME_URL = 'https://widget.solflare.com/';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SolflareMetaMask);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNvbGZsYXJlLXdhbGxldCttZXRhbWFzay1zZGtAMS4wLjNfQHNvbGFuYSt3ZWIzLmpzQDEuOTguMF9idWZmZXJ1dGlsQDQuMC45X2VuY29kaW5nQDAuMS4xM191dGYtOC12YWxpZGF0ZUA1LjAuMTBfL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L21ldGFtYXNrLXNkay9saWIvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUMrRTtBQUN0QztBQUNqQjtBQUNZO0FBQ3dDO0FBQzFCO0FBQ3lCO0FBQ3pCO0FBQzFCO0FBQ1c7QUFDbkMsK0JBQStCLHFEQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsa0JBQWtCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCx5QkFBeUIsNkhBQTZIO0FBQy9NO0FBQ0EsaUNBQWlDLElBQUksR0FBRyxnQ0FBZ0M7QUFDeEU7QUFDQSxpQ0FBaUMsNEJBQTRCLEdBQUcsWUFBWTtBQUM1RTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsVUFBVSwwQkFBMEIsUUFBUSxXQUFXLFNBQVMsVUFBVSxhQUFhLGNBQWMsY0FBYyxrQkFBa0IsZ0JBQWdCLG1CQUFtQjtBQUM3TDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0QsV0FBVztBQUMxRSxxRUFBcUUsY0FBYztBQUNuRixpRUFBaUUsWUFBWTtBQUM3RSxtRUFBbUUsYUFBYTtBQUNoRjtBQUNBLHFCQUFxQixhQUFhO0FBQ2xDO0FBQ0E7QUFDQSxxQkFBcUIsY0FBYztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGdEQUFNO0FBQ3hDLHFEQUFxRDtBQUNyRDtBQUNBO0FBQ0EsMENBQTBDLGVBQWU7QUFDekQsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLG9GQUFxQztBQUN6RTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLCtDQUErQyxpQ0FBaUM7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxpQ0FBaUM7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStEO0FBQy9EO0FBQ0E7QUFDQSwrREFBK0Q7QUFDL0Q7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHNEQUFTO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUM7QUFDekMsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsNERBQW9CO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxrREFBVztBQUNoRDtBQUNBLGlCQUFpQjtBQUNqQix3QkFBd0IsaUNBQWlDO0FBQ3pELHVCQUF1QixtRUFBMkIsZ0JBQWdCLHdEQUFXLE1BQU0sa0RBQVcsdUJBQXVCLGlFQUFvQixhQUFhLGtEQUFXO0FBQ2pLO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRkFBaUYsNERBQW9CO0FBQ3JHLHdCQUF3QixtQ0FBbUM7QUFDM0Q7QUFDQTtBQUNBLGtGQUFrRixrREFBVztBQUM3RjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQixtRUFBMkIsd0JBQXdCLHdEQUFXLE1BQU0sa0RBQVcsdUJBQXVCLGlFQUFvQixhQUFhLGtEQUFXO0FBQzdLLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLDREQUFvQjtBQUNsRSx3QkFBd0IsWUFBWTtBQUNwQztBQUNBO0FBQ0EscUNBQXFDLGtEQUFXO0FBQ2hEO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQTtBQUNBLDhCQUE4QixrREFBVztBQUN6QztBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLHVDQUF1QyxrREFBVztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsK0RBQWM7QUFDakQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdUNBQXVDO0FBQy9ELHdCQUF3QixpRUFBaUU7QUFDekY7QUFDQTtBQUNBLHFCQUFxQiwrREFBYTtBQUNsQztBQUNBLG9FQUFvRSxpRUFBb0I7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsK0JBQStCLFdBQVcsa0RBQVcsYUFBYTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw4QkFBOEI7QUFDdEQ7QUFDQTtBQUNBLDhCQUE4QiwrREFBYTtBQUMzQztBQUNBLHFFQUFxRSxpRUFBb0I7QUFDekYsK0JBQStCLGtEQUFrRDtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QiwrREFBYTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxhQUFhLEtBQUssaUVBQW9CO0FBQ3pGO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsbUNBQW1DO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLGdCQUFnQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3VzdG9tZXItMS8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac29sZmxhcmUtd2FsbGV0K21ldGFtYXNrLXNka0AxLjAuM19Ac29sYW5hK3dlYjMuanNAMS45OC4wX2J1ZmZlcnV0aWxANC4wLjlfZW5jb2RpbmdAMC4xLjEzX3V0Zi04LXZhbGlkYXRlQDUuMC4xMF8vbm9kZV9tb2R1bGVzL0Bzb2xmbGFyZS13YWxsZXQvbWV0YW1hc2stc2RrL2xpYi9lc20vaW5kZXguanM/Zjc1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbmltcG9ydCB7IFB1YmxpY0tleSwgVHJhbnNhY3Rpb24sIFZlcnNpb25lZFRyYW5zYWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJztcbmltcG9ydCBFdmVudEVtaXR0ZXIgZnJvbSAnZXZlbnRlbWl0dGVyMyc7XG5pbXBvcnQgYnM1OCBmcm9tICdiczU4JztcbmltcG9ydCB7IHY0IGFzIHV1aWR2NCB9IGZyb20gJ3V1aWQnO1xuaW1wb3J0IHsgaXNMZWdhY3lUcmFuc2FjdGlvbkluc3RhbmNlLCBzZXJpYWxpemVUcmFuc2FjdGlvbiB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IHsgZGV0ZWN0UHJvdmlkZXIgfSBmcm9tICcuL2RldGVjdFByb3ZpZGVyJztcbmltcG9ydCB7IFN0YW5kYXJkU29sZmxhcmVNZXRhTWFza1dhbGxldEFjY291bnQgfSBmcm9tICcuL3N0YW5kYXJkL2FjY291bnQnO1xuaW1wb3J0IHsgaXNTb2xhbmFDaGFpbiB9IGZyb20gJy4vc3RhbmRhcmQvc29sYW5hJztcbmV4cG9ydCAqIGZyb20gJy4vdHlwZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9zdGFuZGFyZC9hY2NvdW50JztcbmNsYXNzIFNvbGZsYXJlTWV0YU1hc2sgZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLl9uZXR3b3JrID0gJ21haW5uZXQtYmV0YSc7XG4gICAgICAgIHRoaXMuX2lmcmFtZVBhcmFtcyA9IHt9O1xuICAgICAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcbiAgICAgICAgdGhpcy5faWZyYW1lID0gbnVsbDtcbiAgICAgICAgdGhpcy5fcHVibGljS2V5ID0gbnVsbDtcbiAgICAgICAgdGhpcy5fYWNjb3VudCA9IG51bGw7XG4gICAgICAgIHRoaXMuX2lzQ29ubmVjdGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX2Nvbm5lY3RIYW5kbGVyID0gbnVsbDtcbiAgICAgICAgdGhpcy5fbWVzc2FnZUhhbmRsZXJzID0ge307XG4gICAgICAgIHRoaXMuX2hhbmRsZUV2ZW50ID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgc3dpdGNoIChldmVudC50eXBlKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnY29ubmVjdCc6IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29sbGFwc2VJZnJhbWUoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKChfYSA9IGV2ZW50LmRhdGEpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5wdWJsaWNLZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX3B1YmxpY0tleSA9IGV2ZW50LmRhdGEucHVibGljS2V5O1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5faXNDb25uZWN0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX2Nvbm5lY3RIYW5kbGVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29ubmVjdEhhbmRsZXIucmVzb2x2ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2Nvbm5lY3RIYW5kbGVyID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2Nvbm5lY3RlZCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX2Nvbm5lY3RIYW5kbGVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29ubmVjdEhhbmRsZXIucmVqZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29ubmVjdEhhbmRsZXIgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fZGlzY29ubmVjdGVkKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdkaXNjb25uZWN0Jzoge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fY29ubmVjdEhhbmRsZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2Nvbm5lY3RIYW5kbGVyLnJlamVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29ubmVjdEhhbmRsZXIgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2Rpc2Nvbm5lY3RlZCgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ2FjY291bnRDaGFuZ2VkJzoge1xuICAgICAgICAgICAgICAgICAgICBpZiAoKF9iID0gZXZlbnQuZGF0YSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnB1YmxpY0tleSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fcHVibGljS2V5ID0gZXZlbnQuZGF0YS5wdWJsaWNLZXk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVtaXQoJ2FjY291bnRDaGFuZ2VkJywgdGhpcy5wdWJsaWNLZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fc3RhbmRhcmRDb25uZWN0ZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZW1pdCgnYWNjb3VudENoYW5nZWQnLCB1bmRlZmluZWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fc3RhbmRhcmREaXNjb25uZWN0ZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5faGFuZGxlUmVzaXplID0gKGRhdGEpID0+IHtcbiAgICAgICAgICAgIGlmIChkYXRhLnJlc2l6ZU1vZGUgPT09ICdmdWxsJykge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLnBhcmFtcy5tb2RlID09PSAnZnVsbHNjcmVlbicpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZXhwYW5kSWZyYW1lKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGRhdGEucGFyYW1zLm1vZGUgPT09ICdoaWRlJykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jb2xsYXBzZUlmcmFtZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGRhdGEucmVzaXplTW9kZSA9PT0gJ2Nvb3JkaW5hdGVzJykge1xuICAgICAgICAgICAgICAgIHRoaXMuX3Jlc2l6ZUlmcmFtZShkYXRhLnBhcmFtcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX2hhbmRsZU1lc3NhZ2UgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGlmICgoKF9hID0gZXZlbnQuZGF0YSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNoYW5uZWwpICE9PSAnc29sZmxhcmVJZnJhbWVUb1dhbGxldEFkYXB0ZXInKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZGF0YSA9IGV2ZW50LmRhdGEuZGF0YSB8fCB7fTtcbiAgICAgICAgICAgIGlmIChkYXRhLnR5cGUgPT09ICdldmVudCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9oYW5kbGVFdmVudChkYXRhLmV2ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGRhdGEudHlwZSA9PT0gJ3Jlc2l6ZScpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9oYW5kbGVSZXNpemUoZGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChkYXRhLnR5cGUgPT09ICdyZXNwb25zZScpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fbWVzc2FnZUhhbmRsZXJzW2RhdGEuaWRdKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcmVzb2x2ZSwgcmVqZWN0IH0gPSB0aGlzLl9tZXNzYWdlSGFuZGxlcnNbZGF0YS5pZF07XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLl9tZXNzYWdlSGFuZGxlcnNbZGF0YS5pZF07XG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZGF0YS5lcnJvcik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGRhdGEucmVzdWx0KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fcmVtb3ZlRWxlbWVudCA9ICgpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9lbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fcmVtb3ZlRGFuZ2xpbmdFbGVtZW50cyA9ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnc29sZmxhcmUtbWV0YW1hc2std2FsbGV0LWFkYXB0ZXItaWZyYW1lJyk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgZWxlbWVudHMpIHtcbiAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5wYXJlbnRFbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9pbmplY3RFbGVtZW50ID0gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fcmVtb3ZlRWxlbWVudCgpO1xuICAgICAgICAgICAgdGhpcy5fcmVtb3ZlRGFuZ2xpbmdFbGVtZW50cygpO1xuICAgICAgICAgICAgY29uc3QgcGFyYW1zID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0aGlzLl9pZnJhbWVQYXJhbXMpLCB7IG1tOiB0cnVlLCB2OiAxLCBjbHVzdGVyOiB0aGlzLl9uZXR3b3JrIHx8ICdtYWlubmV0LWJldGEnLCBvcmlnaW46IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gfHwgJycsIHRpdGxlOiBkb2N1bWVudC50aXRsZSB8fCAnJyB9KTtcbiAgICAgICAgICAgIGNvbnN0IHF1ZXJ5U3RyaW5nID0gT2JqZWN0LmtleXMocGFyYW1zKVxuICAgICAgICAgICAgICAgIC5tYXAoKGtleSkgPT4gYCR7a2V5fT0ke2VuY29kZVVSSUNvbXBvbmVudChwYXJhbXNba2V5XSl9YClcbiAgICAgICAgICAgICAgICAuam9pbignJicpO1xuICAgICAgICAgICAgY29uc3QgaWZyYW1lVXJsID0gYCR7U29sZmxhcmVNZXRhTWFzay5JRlJBTUVfVVJMfT8ke3F1ZXJ5U3RyaW5nfWA7XG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LmNsYXNzTmFtZSA9ICdzb2xmbGFyZS1tZXRhbWFzay13YWxsZXQtYWRhcHRlci1pZnJhbWUnO1xuICAgICAgICAgICAgdGhpcy5fZWxlbWVudC5pbm5lckhUTUwgPSBgXG4gICAgICA8aWZyYW1lIHNyYz0nJHtpZnJhbWVVcmx9JyBzdHlsZT0ncG9zaXRpb246IGZpeGVkOyB0b3A6IDA7IGJvdHRvbTogMDsgbGVmdDogMDsgcmlnaHQ6IDA7IHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDEwMCU7IGJvcmRlcjogbm9uZTsgYm9yZGVyLXJhZGl1czogMDsgei1pbmRleDogOTk5OTk7IGNvbG9yLXNjaGVtZTogYXV0bzsnIGFsbG93dHJhbnNwYXJlbmN5PSd0cnVlJz48L2lmcmFtZT5cbiAgICBgO1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLl9lbGVtZW50KTtcbiAgICAgICAgICAgIHRoaXMuX2lmcmFtZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignaWZyYW1lJyk7XG4gICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIHRoaXMuX2hhbmRsZU1lc3NhZ2UsIGZhbHNlKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fY29sbGFwc2VJZnJhbWUgPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy5faWZyYW1lKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5faWZyYW1lLnN0eWxlLnRvcCA9ICcnO1xuICAgICAgICAgICAgICAgIHRoaXMuX2lmcmFtZS5zdHlsZS5yaWdodCA9ICcnO1xuICAgICAgICAgICAgICAgIHRoaXMuX2lmcmFtZS5zdHlsZS5oZWlnaHQgPSAnMnB4JztcbiAgICAgICAgICAgICAgICB0aGlzLl9pZnJhbWUuc3R5bGUud2lkdGggPSAnMnB4JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fZXhwYW5kSWZyYW1lID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2lmcmFtZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2lmcmFtZS5zdHlsZS50b3AgPSAnMHB4JztcbiAgICAgICAgICAgICAgICB0aGlzLl9pZnJhbWUuc3R5bGUuYm90dG9tID0gJzBweCc7XG4gICAgICAgICAgICAgICAgdGhpcy5faWZyYW1lLnN0eWxlLmxlZnQgPSAnMHB4JztcbiAgICAgICAgICAgICAgICB0aGlzLl9pZnJhbWUuc3R5bGUucmlnaHQgPSAnMHB4JztcbiAgICAgICAgICAgICAgICB0aGlzLl9pZnJhbWUuc3R5bGUud2lkdGggPSAnMTAwJSc7XG4gICAgICAgICAgICAgICAgdGhpcy5faWZyYW1lLnN0eWxlLmhlaWdodCA9ICcxMDAlJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fcmVzaXplSWZyYW1lID0gKHBhcmFtcykgPT4ge1xuICAgICAgICAgICAgaWYgKCF0aGlzLl9pZnJhbWUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9pZnJhbWUuc3R5bGUudG9wID0gaXNGaW5pdGUocGFyYW1zLnRvcCkgPyBgJHtwYXJhbXMudG9wfXB4YCA6ICcnO1xuICAgICAgICAgICAgdGhpcy5faWZyYW1lLnN0eWxlLmJvdHRvbSA9IGlzRmluaXRlKHBhcmFtcy5ib3R0b20pID8gYCR7cGFyYW1zLmJvdHRvbX1weGAgOiAnJztcbiAgICAgICAgICAgIHRoaXMuX2lmcmFtZS5zdHlsZS5sZWZ0ID0gaXNGaW5pdGUocGFyYW1zLmxlZnQpID8gYCR7cGFyYW1zLmxlZnR9cHhgIDogJyc7XG4gICAgICAgICAgICB0aGlzLl9pZnJhbWUuc3R5bGUucmlnaHQgPSBpc0Zpbml0ZShwYXJhbXMucmlnaHQpID8gYCR7cGFyYW1zLnJpZ2h0fXB4YCA6ICcnO1xuICAgICAgICAgICAgdGhpcy5faWZyYW1lLnN0eWxlLndpZHRoID0gaXNGaW5pdGUocGFyYW1zLndpZHRoKVxuICAgICAgICAgICAgICAgID8gYCR7cGFyYW1zLndpZHRofXB4YFxuICAgICAgICAgICAgICAgIDogcGFyYW1zLndpZHRoO1xuICAgICAgICAgICAgdGhpcy5faWZyYW1lLnN0eWxlLmhlaWdodCA9IGlzRmluaXRlKHBhcmFtcy5oZWlnaHQpXG4gICAgICAgICAgICAgICAgPyBgJHtwYXJhbXMuaGVpZ2h0fXB4YFxuICAgICAgICAgICAgICAgIDogcGFyYW1zLmhlaWdodDtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5fc2VuZElmcmFtZU1lc3NhZ2UgPSAoZGF0YSkgPT4ge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmNvbm5lY3RlZCB8fCAhdGhpcy5wdWJsaWNLZXkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1dhbGxldCBub3QgY29ubmVjdGVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZUlkID0gdXVpZHY0KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fbWVzc2FnZUhhbmRsZXJzW21lc3NhZ2VJZF0gPSB7IHJlc29sdmUsIHJlamVjdCB9O1xuICAgICAgICAgICAgICAgIChfYiA9IChfYSA9IHRoaXMuX2lmcmFtZSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNvbnRlbnRXaW5kb3cpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5wb3N0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICAgIGNoYW5uZWw6ICdzb2xmbGFyZVdhbGxldEFkYXB0ZXJUb0lmcmFtZScsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IE9iamVjdC5hc3NpZ24oeyBpZDogbWVzc2FnZUlkIH0sIGRhdGEpXG4gICAgICAgICAgICAgICAgfSwgJyonKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9jb25uZWN0ZWQgPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9pc0Nvbm5lY3RlZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLmVtaXQoJ2Nvbm5lY3QnLCB0aGlzLnB1YmxpY0tleSk7XG4gICAgICAgICAgICB0aGlzLl9zdGFuZGFyZENvbm5lY3RlZCgpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9kaXNjb25uZWN0ZWQgPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9wdWJsaWNLZXkgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5faXNDb25uZWN0ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgdGhpcy5faGFuZGxlTWVzc2FnZSwgZmFsc2UpO1xuICAgICAgICAgICAgdGhpcy5fcmVtb3ZlRWxlbWVudCgpO1xuICAgICAgICAgICAgdGhpcy5lbWl0KCdkaXNjb25uZWN0Jyk7XG4gICAgICAgICAgICB0aGlzLl9zdGFuZGFyZERpc2Nvbm5lY3RlZCgpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9zdGFuZGFyZENvbm5lY3RlZCA9ICgpID0+IHtcbiAgICAgICAgICAgIGlmICghdGhpcy5wdWJsaWNLZXkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBhZGRyZXNzID0gdGhpcy5wdWJsaWNLZXkudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIGlmICghdGhpcy5fYWNjb3VudCB8fCB0aGlzLl9hY2NvdW50LmFkZHJlc3MgIT09IGFkZHJlc3MpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9hY2NvdW50ID0gbmV3IFN0YW5kYXJkU29sZmxhcmVNZXRhTWFza1dhbGxldEFjY291bnQoe1xuICAgICAgICAgICAgICAgICAgICBhZGRyZXNzLFxuICAgICAgICAgICAgICAgICAgICBwdWJsaWNLZXk6IHRoaXMucHVibGljS2V5LnRvQnl0ZXMoKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMuZW1pdCgnc3RhbmRhcmRfY2hhbmdlJywgeyBhY2NvdW50czogdGhpcy5zdGFuZGFyZEFjY291bnRzIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLl9zdGFuZGFyZERpc2Nvbm5lY3RlZCA9ICgpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9hY2NvdW50KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fYWNjb3VudCA9IG51bGw7XG4gICAgICAgICAgICAgICAgdGhpcy5lbWl0KCdzdGFuZGFyZF9jaGFuZ2UnLCB7IGFjY291bnRzOiB0aGlzLnN0YW5kYXJkQWNjb3VudHMgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGlmIChjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcubmV0d29yaykge1xuICAgICAgICAgICAgdGhpcy5fbmV0d29yayA9IGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5uZXR3b3JrO1xuICAgICAgICB9XG4gICAgICAgIGlmICh3aW5kb3cuU29sZmxhcmVNZXRhTWFza1BhcmFtcykge1xuICAgICAgICAgICAgdGhpcy5faWZyYW1lUGFyYW1zID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0aGlzLl9pZnJhbWVQYXJhbXMpLCB3aW5kb3cuU29sZmxhcmVNZXRhTWFza1BhcmFtcyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5wYXJhbXMpIHtcbiAgICAgICAgICAgIHRoaXMuX2lmcmFtZVBhcmFtcyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5faWZyYW1lUGFyYW1zKSwgY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLnBhcmFtcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IHB1YmxpY0tleSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3B1YmxpY0tleSA/IG5ldyBQdWJsaWNLZXkodGhpcy5fcHVibGljS2V5KSA6IG51bGw7XG4gICAgfVxuICAgIGdldCBzdGFuZGFyZEFjY291bnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hY2NvdW50O1xuICAgIH1cbiAgICBnZXQgc3RhbmRhcmRBY2NvdW50cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FjY291bnQgPyBbdGhpcy5fYWNjb3VudF0gOiBbXTtcbiAgICB9XG4gICAgZ2V0IGlzQ29ubmVjdGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faXNDb25uZWN0ZWQ7XG4gICAgfVxuICAgIGdldCBjb25uZWN0ZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzQ29ubmVjdGVkO1xuICAgIH1cbiAgICBnZXQgYXV0b0FwcHJvdmUoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29ubmVjdCgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbm5lY3RlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX2luamVjdEVsZW1lbnQoKTtcbiAgICAgICAgICAgIHlpZWxkIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jb25uZWN0SGFuZGxlciA9IHsgcmVzb2x2ZSwgcmVqZWN0IH07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGRpc2Nvbm5lY3QoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB5aWVsZCB0aGlzLl9zZW5kSWZyYW1lTWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgbWV0aG9kOiAnZGlzY29ubmVjdCdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5fZGlzY29ubmVjdGVkKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzaWduVHJhbnNhY3Rpb24odHJhbnNhY3Rpb24pIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmNvbm5lY3RlZCB8fCAhdGhpcy5wdWJsaWNLZXkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1dhbGxldCBub3QgY29ubmVjdGVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNlcmlhbGl6ZWRUcmFuc2FjdGlvbiA9IHNlcmlhbGl6ZVRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uKTtcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIHRoaXMuX3NlbmRJZnJhbWVNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnc2lnblRyYW5zYWN0aW9uVjInLFxuICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zYWN0aW9uOiBiczU4LmVuY29kZShzZXJpYWxpemVkVHJhbnNhY3Rpb24pXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjb25zdCB7IHRyYW5zYWN0aW9uOiBzaWduZWRUcmFuc2FjdGlvbiB9ID0gcmVzcG9uc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzTGVnYWN5VHJhbnNhY3Rpb25JbnN0YW5jZSh0cmFuc2FjdGlvbikgPyBUcmFuc2FjdGlvbi5mcm9tKGJzNTguZGVjb2RlKHNpZ25lZFRyYW5zYWN0aW9uKSkgOiBWZXJzaW9uZWRUcmFuc2FjdGlvbi5kZXNlcmlhbGl6ZShiczU4LmRlY29kZShzaWduZWRUcmFuc2FjdGlvbikpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKChfYSA9IGUgPT09IG51bGwgfHwgZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZS50b1N0cmluZykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwoZSkpIHx8ICdGYWlsZWQgdG8gc2lnbiB0cmFuc2FjdGlvbicpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc2lnbkFsbFRyYW5zYWN0aW9ucyh0cmFuc2FjdGlvbnMpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmNvbm5lY3RlZCB8fCAhdGhpcy5wdWJsaWNLZXkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1dhbGxldCBub3QgY29ubmVjdGVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNlcmlhbGl6ZWRUcmFuc2FjdGlvbnMgPSB0cmFuc2FjdGlvbnMubWFwKCh0cmFuc2FjdGlvbikgPT4gc2VyaWFsaXplVHJhbnNhY3Rpb24odHJhbnNhY3Rpb24pKTtcbiAgICAgICAgICAgICAgICBjb25zdCB7IHRyYW5zYWN0aW9uczogc2lnbmVkVHJhbnNhY3Rpb25zIH0gPSB5aWVsZCB0aGlzLl9zZW5kSWZyYW1lTWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ3NpZ25BbGxUcmFuc2FjdGlvbnNWMicsXG4gICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNhY3Rpb25zOiBzZXJpYWxpemVkVHJhbnNhY3Rpb25zLm1hcCgodHJhbnNhY3Rpb24pID0+IGJzNTguZW5jb2RlKHRyYW5zYWN0aW9uKSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBzaWduZWRUcmFuc2FjdGlvbnMubWFwKChzaWduZWRUcmFuc2FjdGlvbiwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzTGVnYWN5VHJhbnNhY3Rpb25JbnN0YW5jZSh0cmFuc2FjdGlvbnNbaW5kZXhdKSA/IFRyYW5zYWN0aW9uLmZyb20oYnM1OC5kZWNvZGUoc2lnbmVkVHJhbnNhY3Rpb24pKSA6IFZlcnNpb25lZFRyYW5zYWN0aW9uLmRlc2VyaWFsaXplKGJzNTguZGVjb2RlKHNpZ25lZFRyYW5zYWN0aW9uKSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigoKF9hID0gZSA9PT0gbnVsbCB8fCBlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlLnRvU3RyaW5nKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbChlKSkgfHwgJ0ZhaWxlZCB0byBzaWduIHRyYW5zYWN0aW9ucycpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc2lnbkFuZFNlbmRUcmFuc2FjdGlvbih0cmFuc2FjdGlvbiwgb3B0aW9ucykge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuY29ubmVjdGVkIHx8ICF0aGlzLnB1YmxpY0tleSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignV2FsbGV0IG5vdCBjb25uZWN0ZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2VyaWFsaXplZFRyYW5zYWN0aW9uID0gc2VyaWFsaXplVHJhbnNhY3Rpb24odHJhbnNhY3Rpb24pO1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgc2lnbmF0dXJlIH0gPSB5aWVsZCB0aGlzLl9zZW5kSWZyYW1lTWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ3NpZ25BbmRTZW5kVHJhbnNhY3Rpb24nLFxuICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zYWN0aW9uOiBiczU4LmVuY29kZShzZXJpYWxpemVkVHJhbnNhY3Rpb24pLFxuICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uc1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNpZ25hdHVyZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCgoX2EgPSBlID09PSBudWxsIHx8IGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGUudG9TdHJpbmcpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKGUpKSB8fCAnRmFpbGVkIHRvIHNpZ24gYW5kIHNlbmQgdHJhbnNhY3Rpb24nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHNpZ25NZXNzYWdlKGRhdGEsIGRpc3BsYXkgPSAndXRmOCcpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmNvbm5lY3RlZCB8fCAhdGhpcy5wdWJsaWNLZXkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1dhbGxldCBub3QgY29ubmVjdGVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgc2lnbmF0dXJlIH0gPSB5aWVsZCB0aGlzLl9zZW5kSWZyYW1lTWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ3NpZ25NZXNzYWdlJyxcbiAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBiczU4LmVuY29kZShkYXRhKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBVaW50OEFycmF5LmZyb20oYnM1OC5kZWNvZGUoc2lnbmF0dXJlKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigoKF9hID0gZSA9PT0gbnVsbCB8fCBlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlLnRvU3RyaW5nKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbChlKSkgfHwgJ0ZhaWxlZCB0byBzaWduIG1lc3NhZ2UnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHNpZ24oZGF0YSwgZGlzcGxheSA9ICd1dGY4Jykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIHlpZWxkIHRoaXMuc2lnbk1lc3NhZ2UoZGF0YSwgZGlzcGxheSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdGF0aWMgaXNTdXBwb3J0ZWQoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBwcm92aWRlciA9IHlpZWxkIGRldGVjdFByb3ZpZGVyKCk7XG4gICAgICAgICAgICByZXR1cm4gISFwcm92aWRlcjtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YW5kYXJkU2lnbkFuZFNlbmRUcmFuc2FjdGlvbiguLi5pbnB1dHMpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5jb25uZWN0ZWQpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdub3QgY29ubmVjdGVkJyk7XG4gICAgICAgICAgICBjb25zdCBvdXRwdXRzID0gW107XG4gICAgICAgICAgICBpZiAoaW5wdXRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgdHJhbnNhY3Rpb24sIGFjY291bnQsIGNoYWluLCBvcHRpb25zIH0gPSBpbnB1dHNbMF07XG4gICAgICAgICAgICAgICAgY29uc3QgeyBtaW5Db250ZXh0U2xvdCwgcHJlZmxpZ2h0Q29tbWl0bWVudCwgc2tpcFByZWZsaWdodCwgbWF4UmV0cmllcyB9ID0gb3B0aW9ucyB8fCB7fTtcbiAgICAgICAgICAgICAgICBpZiAoYWNjb3VudCAhPT0gdGhpcy5fYWNjb3VudClcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIGFjY291bnQnKTtcbiAgICAgICAgICAgICAgICBpZiAoIWlzU29sYW5hQ2hhaW4oY2hhaW4pKVxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgY2hhaW4nKTtcbiAgICAgICAgICAgICAgICBjb25zdCBzaWduYXR1cmUgPSB5aWVsZCB0aGlzLnNpZ25BbmRTZW5kVHJhbnNhY3Rpb24oVmVyc2lvbmVkVHJhbnNhY3Rpb24uZGVzZXJpYWxpemUodHJhbnNhY3Rpb24pLCB7XG4gICAgICAgICAgICAgICAgICAgIHByZWZsaWdodENvbW1pdG1lbnQsXG4gICAgICAgICAgICAgICAgICAgIG1pbkNvbnRleHRTbG90LFxuICAgICAgICAgICAgICAgICAgICBtYXhSZXRyaWVzLFxuICAgICAgICAgICAgICAgICAgICBza2lwUHJlZmxpZ2h0XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgb3V0cHV0cy5wdXNoKHsgc2lnbmF0dXJlOiBiczU4LmRlY29kZShzaWduYXR1cmUpIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaW5wdXRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGlucHV0IG9mIGlucHV0cykge1xuICAgICAgICAgICAgICAgICAgICBvdXRwdXRzLnB1c2goLi4uKHlpZWxkIHRoaXMuc3RhbmRhcmRTaWduQW5kU2VuZFRyYW5zYWN0aW9uKGlucHV0KSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBvdXRwdXRzO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhbmRhcmRTaWduVHJhbnNhY3Rpb24oLi4uaW5wdXRzKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuY29ubmVjdGVkKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignbm90IGNvbm5lY3RlZCcpO1xuICAgICAgICAgICAgY29uc3Qgb3V0cHV0cyA9IFtdO1xuICAgICAgICAgICAgaWYgKGlucHV0cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IHRyYW5zYWN0aW9uLCBhY2NvdW50LCBjaGFpbiB9ID0gaW5wdXRzWzBdO1xuICAgICAgICAgICAgICAgIGlmIChhY2NvdW50ICE9PSB0aGlzLl9hY2NvdW50KVxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgYWNjb3VudCcpO1xuICAgICAgICAgICAgICAgIGlmIChjaGFpbiAmJiAhaXNTb2xhbmFDaGFpbihjaGFpbikpXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBjaGFpbicpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNpZ25lZFRyYW5zYWN0aW9uID0geWllbGQgdGhpcy5zaWduVHJhbnNhY3Rpb24oVmVyc2lvbmVkVHJhbnNhY3Rpb24uZGVzZXJpYWxpemUodHJhbnNhY3Rpb24pKTtcbiAgICAgICAgICAgICAgICBvdXRwdXRzLnB1c2goeyBzaWduZWRUcmFuc2FjdGlvbjogc2lnbmVkVHJhbnNhY3Rpb24uc2VyaWFsaXplKCkgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChpbnB1dHMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgIGxldCBjaGFpbjtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGlucHV0IG9mIGlucHV0cykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXQuYWNjb3VudCAhPT0gdGhpcy5fYWNjb3VudClcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBhY2NvdW50Jyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dC5jaGFpbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc1NvbGFuYUNoYWluKGlucHV0LmNoYWluKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgY2hhaW4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaGFpbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dC5jaGFpbiAhPT0gY2hhaW4pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignY29uZmxpY3RpbmcgY2hhaW4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYWluID0gaW5wdXQuY2hhaW47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgdHJhbnNhY3Rpb25zID0gaW5wdXRzLm1hcCgoeyB0cmFuc2FjdGlvbiB9KSA9PiBWZXJzaW9uZWRUcmFuc2FjdGlvbi5kZXNlcmlhbGl6ZSh0cmFuc2FjdGlvbikpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNpZ25lZFRyYW5zYWN0aW9ucyA9IHlpZWxkIHRoaXMuc2lnbkFsbFRyYW5zYWN0aW9ucyh0cmFuc2FjdGlvbnMpO1xuICAgICAgICAgICAgICAgIG91dHB1dHMucHVzaCguLi5zaWduZWRUcmFuc2FjdGlvbnMubWFwKChzaWduZWRUcmFuc2FjdGlvbikgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgc2lnbmVkVHJhbnNhY3Rpb246IHNpZ25lZFRyYW5zYWN0aW9uLnNlcmlhbGl6ZSgpXG4gICAgICAgICAgICAgICAgfSkpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBvdXRwdXRzO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhbmRhcmRTaWduTWVzc2FnZSguLi5pbnB1dHMpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5jb25uZWN0ZWQpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdub3QgY29ubmVjdGVkJyk7XG4gICAgICAgICAgICBjb25zdCBvdXRwdXRzID0gW107XG4gICAgICAgICAgICBpZiAoaW5wdXRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgbWVzc2FnZSwgYWNjb3VudCB9ID0gaW5wdXRzWzBdO1xuICAgICAgICAgICAgICAgIGlmIChhY2NvdW50ICE9PSB0aGlzLl9hY2NvdW50KVxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgYWNjb3VudCcpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IHlpZWxkIHRoaXMuc2lnbk1lc3NhZ2UobWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgb3V0cHV0cy5wdXNoKHsgc2lnbmVkTWVzc2FnZTogbWVzc2FnZSwgc2lnbmF0dXJlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaW5wdXRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGlucHV0IG9mIGlucHV0cykge1xuICAgICAgICAgICAgICAgICAgICBvdXRwdXRzLnB1c2goLi4uKHlpZWxkIHRoaXMuc3RhbmRhcmRTaWduTWVzc2FnZShpbnB1dCkpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gb3V0cHV0cztcbiAgICAgICAgfSk7XG4gICAgfVxufVxuU29sZmxhcmVNZXRhTWFzay5JRlJBTUVfVVJMID0gJ2h0dHBzOi8vd2lkZ2V0LnNvbGZsYXJlLmNvbS8nO1xuZXhwb3J0IGRlZmF1bHQgU29sZmxhcmVNZXRhTWFzaztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/account.js":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/account.js ***!
  \**********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StandardSolflareMetaMaskWalletAccount: () => (/* binding */ StandardSolflareMetaMaskWalletAccount)\n/* harmony export */ });\n/* harmony import */ var _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/wallet-standard-features */ \"(ssr)/./node_modules/.pnpm/@solana+wallet-standard-features@1.3.0/node_modules/@solana/wallet-standard-features/lib/esm/signAndSendTransaction.js\");\n/* harmony import */ var _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/wallet-standard-features */ \"(ssr)/./node_modules/.pnpm/@solana+wallet-standard-features@1.3.0/node_modules/@solana/wallet-standard-features/lib/esm/signTransaction.js\");\n/* harmony import */ var _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/wallet-standard-features */ \"(ssr)/./node_modules/.pnpm/@solana+wallet-standard-features@1.3.0/node_modules/@solana/wallet-standard-features/lib/esm/signMessage.js\");\n/* harmony import */ var _solana_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./solana.js */ \"(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/solana.js\");\n// This is copied with modification from @wallet-standard/wallet\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _StandardSolflareMetaMaskWalletAccount_address, _StandardSolflareMetaMaskWalletAccount_publicKey, _StandardSolflareMetaMaskWalletAccount_chains, _StandardSolflareMetaMaskWalletAccount_features, _StandardSolflareMetaMaskWalletAccount_label, _StandardSolflareMetaMaskWalletAccount_icon;\n\n\nconst chains = _solana_js__WEBPACK_IMPORTED_MODULE_0__.SOLANA_CHAINS;\nconst features = [_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_1__.SolanaSignAndSendTransaction, _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_2__.SolanaSignTransaction, _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_3__.SolanaSignMessage];\nclass StandardSolflareMetaMaskWalletAccount {\n    get address() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_address, \"f\");\n    }\n    get publicKey() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_publicKey, \"f\").slice();\n    }\n    get chains() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_chains, \"f\").slice();\n    }\n    get features() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_features, \"f\").slice();\n    }\n    get label() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_label, \"f\");\n    }\n    get icon() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_icon, \"f\");\n    }\n    constructor({ address, publicKey, label, icon }) {\n        _StandardSolflareMetaMaskWalletAccount_address.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_publicKey.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_chains.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_features.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_label.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_icon.set(this, void 0);\n        if (new.target === StandardSolflareMetaMaskWalletAccount) {\n            Object.freeze(this);\n        }\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_address, address, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_publicKey, publicKey, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_chains, chains, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_features, features, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_label, label, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_icon, icon, \"f\");\n    }\n}\n_StandardSolflareMetaMaskWalletAccount_address = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_publicKey = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_chains = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_features = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_label = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_icon = new WeakMap();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNvbGZsYXJlLXdhbGxldCttZXRhbWFzay1zZGtAMS4wLjNfQHNvbGFuYSt3ZWIzLmpzQDEuOTguMF9idWZmZXJ1dGlsQDQuMC45X2VuY29kaW5nQDAuMS4xM191dGYtOC12YWxpZGF0ZUA1LjAuMTBfL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L21ldGFtYXNrLXNkay9saWIvZXNtL3N0YW5kYXJkL2FjY291bnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBLDhCQUE4QixTQUFJLElBQUksU0FBSTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixTQUFJLElBQUksU0FBSTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDMEg7QUFDOUU7QUFDNUMsZUFBZSxxREFBYTtBQUM1QixrQkFBa0IsMEZBQTRCLEVBQUUsbUZBQXFCLEVBQUUsK0VBQWlCO0FBQ2pGO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlDQUFpQztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jdXN0b21lci0xLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0Bzb2xmbGFyZS13YWxsZXQrbWV0YW1hc2stc2RrQDEuMC4zX0Bzb2xhbmErd2ViMy5qc0AxLjk4LjBfYnVmZmVydXRpbEA0LjAuOV9lbmNvZGluZ0AwLjEuMTNfdXRmLTgtdmFsaWRhdGVANS4wLjEwXy9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9tZXRhbWFzay1zZGsvbGliL2VzbS9zdGFuZGFyZC9hY2NvdW50LmpzP2UwNDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBpcyBjb3BpZWQgd2l0aCBtb2RpZmljYXRpb24gZnJvbSBAd2FsbGV0LXN0YW5kYXJkL3dhbGxldFxudmFyIF9fY2xhc3NQcml2YXRlRmllbGRHZXQgPSAodGhpcyAmJiB0aGlzLl9fY2xhc3NQcml2YXRlRmllbGRHZXQpIHx8IGZ1bmN0aW9uIChyZWNlaXZlciwgc3RhdGUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBnZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgcmVhZCBwcml2YXRlIG1lbWJlciBmcm9tIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIGtpbmQgPT09IFwibVwiID8gZiA6IGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyKSA6IGYgPyBmLnZhbHVlIDogc3RhdGUuZ2V0KHJlY2VpdmVyKTtcbn07XG52YXIgX19jbGFzc1ByaXZhdGVGaWVsZFNldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZFNldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwgdmFsdWUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJtXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIG1ldGhvZCBpcyBub3Qgd3JpdGFibGVcIik7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgc2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHdyaXRlIHByaXZhdGUgbWVtYmVyIHRvIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIChraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlciwgdmFsdWUpIDogZiA/IGYudmFsdWUgPSB2YWx1ZSA6IHN0YXRlLnNldChyZWNlaXZlciwgdmFsdWUpKSwgdmFsdWU7XG59O1xudmFyIF9TdGFuZGFyZFNvbGZsYXJlTWV0YU1hc2tXYWxsZXRBY2NvdW50X2FkZHJlc3MsIF9TdGFuZGFyZFNvbGZsYXJlTWV0YU1hc2tXYWxsZXRBY2NvdW50X3B1YmxpY0tleSwgX1N0YW5kYXJkU29sZmxhcmVNZXRhTWFza1dhbGxldEFjY291bnRfY2hhaW5zLCBfU3RhbmRhcmRTb2xmbGFyZU1ldGFNYXNrV2FsbGV0QWNjb3VudF9mZWF0dXJlcywgX1N0YW5kYXJkU29sZmxhcmVNZXRhTWFza1dhbGxldEFjY291bnRfbGFiZWwsIF9TdGFuZGFyZFNvbGZsYXJlTWV0YU1hc2tXYWxsZXRBY2NvdW50X2ljb247XG5pbXBvcnQgeyBTb2xhbmFTaWduQW5kU2VuZFRyYW5zYWN0aW9uLCBTb2xhbmFTaWduTWVzc2FnZSwgU29sYW5hU2lnblRyYW5zYWN0aW9uIH0gZnJvbSAnQHNvbGFuYS93YWxsZXQtc3RhbmRhcmQtZmVhdHVyZXMnO1xuaW1wb3J0IHsgU09MQU5BX0NIQUlOUyB9IGZyb20gJy4vc29sYW5hLmpzJztcbmNvbnN0IGNoYWlucyA9IFNPTEFOQV9DSEFJTlM7XG5jb25zdCBmZWF0dXJlcyA9IFtTb2xhbmFTaWduQW5kU2VuZFRyYW5zYWN0aW9uLCBTb2xhbmFTaWduVHJhbnNhY3Rpb24sIFNvbGFuYVNpZ25NZXNzYWdlXTtcbmV4cG9ydCBjbGFzcyBTdGFuZGFyZFNvbGZsYXJlTWV0YU1hc2tXYWxsZXRBY2NvdW50IHtcbiAgICBnZXQgYWRkcmVzcygpIHtcbiAgICAgICAgcmV0dXJuIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX1N0YW5kYXJkU29sZmxhcmVNZXRhTWFza1dhbGxldEFjY291bnRfYWRkcmVzcywgXCJmXCIpO1xuICAgIH1cbiAgICBnZXQgcHVibGljS2V5KCkge1xuICAgICAgICByZXR1cm4gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfU3RhbmRhcmRTb2xmbGFyZU1ldGFNYXNrV2FsbGV0QWNjb3VudF9wdWJsaWNLZXksIFwiZlwiKS5zbGljZSgpO1xuICAgIH1cbiAgICBnZXQgY2hhaW5zKCkge1xuICAgICAgICByZXR1cm4gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfU3RhbmRhcmRTb2xmbGFyZU1ldGFNYXNrV2FsbGV0QWNjb3VudF9jaGFpbnMsIFwiZlwiKS5zbGljZSgpO1xuICAgIH1cbiAgICBnZXQgZmVhdHVyZXMoKSB7XG4gICAgICAgIHJldHVybiBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9TdGFuZGFyZFNvbGZsYXJlTWV0YU1hc2tXYWxsZXRBY2NvdW50X2ZlYXR1cmVzLCBcImZcIikuc2xpY2UoKTtcbiAgICB9XG4gICAgZ2V0IGxhYmVsKCkge1xuICAgICAgICByZXR1cm4gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfU3RhbmRhcmRTb2xmbGFyZU1ldGFNYXNrV2FsbGV0QWNjb3VudF9sYWJlbCwgXCJmXCIpO1xuICAgIH1cbiAgICBnZXQgaWNvbigpIHtcbiAgICAgICAgcmV0dXJuIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX1N0YW5kYXJkU29sZmxhcmVNZXRhTWFza1dhbGxldEFjY291bnRfaWNvbiwgXCJmXCIpO1xuICAgIH1cbiAgICBjb25zdHJ1Y3Rvcih7IGFkZHJlc3MsIHB1YmxpY0tleSwgbGFiZWwsIGljb24gfSkge1xuICAgICAgICBfU3RhbmRhcmRTb2xmbGFyZU1ldGFNYXNrV2FsbGV0QWNjb3VudF9hZGRyZXNzLnNldCh0aGlzLCB2b2lkIDApO1xuICAgICAgICBfU3RhbmRhcmRTb2xmbGFyZU1ldGFNYXNrV2FsbGV0QWNjb3VudF9wdWJsaWNLZXkuc2V0KHRoaXMsIHZvaWQgMCk7XG4gICAgICAgIF9TdGFuZGFyZFNvbGZsYXJlTWV0YU1hc2tXYWxsZXRBY2NvdW50X2NoYWlucy5zZXQodGhpcywgdm9pZCAwKTtcbiAgICAgICAgX1N0YW5kYXJkU29sZmxhcmVNZXRhTWFza1dhbGxldEFjY291bnRfZmVhdHVyZXMuc2V0KHRoaXMsIHZvaWQgMCk7XG4gICAgICAgIF9TdGFuZGFyZFNvbGZsYXJlTWV0YU1hc2tXYWxsZXRBY2NvdW50X2xhYmVsLnNldCh0aGlzLCB2b2lkIDApO1xuICAgICAgICBfU3RhbmRhcmRTb2xmbGFyZU1ldGFNYXNrV2FsbGV0QWNjb3VudF9pY29uLnNldCh0aGlzLCB2b2lkIDApO1xuICAgICAgICBpZiAobmV3LnRhcmdldCA9PT0gU3RhbmRhcmRTb2xmbGFyZU1ldGFNYXNrV2FsbGV0QWNjb3VudCkge1xuICAgICAgICAgICAgT2JqZWN0LmZyZWV6ZSh0aGlzKTtcbiAgICAgICAgfVxuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9TdGFuZGFyZFNvbGZsYXJlTWV0YU1hc2tXYWxsZXRBY2NvdW50X2FkZHJlc3MsIGFkZHJlc3MsIFwiZlwiKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfU3RhbmRhcmRTb2xmbGFyZU1ldGFNYXNrV2FsbGV0QWNjb3VudF9wdWJsaWNLZXksIHB1YmxpY0tleSwgXCJmXCIpO1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHRoaXMsIF9TdGFuZGFyZFNvbGZsYXJlTWV0YU1hc2tXYWxsZXRBY2NvdW50X2NoYWlucywgY2hhaW5zLCBcImZcIik7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX1N0YW5kYXJkU29sZmxhcmVNZXRhTWFza1dhbGxldEFjY291bnRfZmVhdHVyZXMsIGZlYXR1cmVzLCBcImZcIik7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX1N0YW5kYXJkU29sZmxhcmVNZXRhTWFza1dhbGxldEFjY291bnRfbGFiZWwsIGxhYmVsLCBcImZcIik7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX1N0YW5kYXJkU29sZmxhcmVNZXRhTWFza1dhbGxldEFjY291bnRfaWNvbiwgaWNvbiwgXCJmXCIpO1xuICAgIH1cbn1cbl9TdGFuZGFyZFNvbGZsYXJlTWV0YU1hc2tXYWxsZXRBY2NvdW50X2FkZHJlc3MgPSBuZXcgV2Vha01hcCgpLCBfU3RhbmRhcmRTb2xmbGFyZU1ldGFNYXNrV2FsbGV0QWNjb3VudF9wdWJsaWNLZXkgPSBuZXcgV2Vha01hcCgpLCBfU3RhbmRhcmRTb2xmbGFyZU1ldGFNYXNrV2FsbGV0QWNjb3VudF9jaGFpbnMgPSBuZXcgV2Vha01hcCgpLCBfU3RhbmRhcmRTb2xmbGFyZU1ldGFNYXNrV2FsbGV0QWNjb3VudF9mZWF0dXJlcyA9IG5ldyBXZWFrTWFwKCksIF9TdGFuZGFyZFNvbGZsYXJlTWV0YU1hc2tXYWxsZXRBY2NvdW50X2xhYmVsID0gbmV3IFdlYWtNYXAoKSwgX1N0YW5kYXJkU29sZmxhcmVNZXRhTWFza1dhbGxldEFjY291bnRfaWNvbiA9IG5ldyBXZWFrTWFwKCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/account.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/solana.js":
/*!*********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/solana.js ***!
  \*********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SOLANA_CHAINS: () => (/* binding */ SOLANA_CHAINS),\n/* harmony export */   SOLANA_DEVNET_CHAIN: () => (/* binding */ SOLANA_DEVNET_CHAIN),\n/* harmony export */   SOLANA_LOCALNET_CHAIN: () => (/* binding */ SOLANA_LOCALNET_CHAIN),\n/* harmony export */   SOLANA_MAINNET_CHAIN: () => (/* binding */ SOLANA_MAINNET_CHAIN),\n/* harmony export */   SOLANA_TESTNET_CHAIN: () => (/* binding */ SOLANA_TESTNET_CHAIN),\n/* harmony export */   isSolanaChain: () => (/* binding */ isSolanaChain)\n/* harmony export */ });\n// This is copied from @solana/wallet-standard-chains\n/** Solana Mainnet (beta) cluster, e.g. https://api.mainnet-beta.solana.com */\nconst SOLANA_MAINNET_CHAIN = 'solana:mainnet';\n/** Solana Devnet cluster, e.g. https://api.devnet.solana.com */\nconst SOLANA_DEVNET_CHAIN = 'solana:devnet';\n/** Solana Testnet cluster, e.g. https://api.testnet.solana.com */\nconst SOLANA_TESTNET_CHAIN = 'solana:testnet';\n/** Solana Localnet cluster, e.g. http://localhost:8899 */\nconst SOLANA_LOCALNET_CHAIN = 'solana:localnet';\n/** Array of all Solana clusters */\nconst SOLANA_CHAINS = [\n    SOLANA_MAINNET_CHAIN,\n    SOLANA_DEVNET_CHAIN,\n    SOLANA_TESTNET_CHAIN,\n    SOLANA_LOCALNET_CHAIN\n];\n/**\n * Check if a chain corresponds with one of the Solana clusters.\n */\nfunction isSolanaChain(chain) {\n    return SOLANA_CHAINS.includes(chain);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNvbGZsYXJlLXdhbGxldCttZXRhbWFzay1zZGtAMS4wLjNfQHNvbGFuYSt3ZWIzLmpzQDEuOTguMF9idWZmZXJ1dGlsQDQuMC45X2VuY29kaW5nQDAuMS4xM191dGYtOC12YWxpZGF0ZUA1LjAuMTBfL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L21ldGFtYXNrLXNkay9saWIvZXNtL3N0YW5kYXJkL3NvbGFuYS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2N1c3RvbWVyLTEvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNvbGZsYXJlLXdhbGxldCttZXRhbWFzay1zZGtAMS4wLjNfQHNvbGFuYSt3ZWIzLmpzQDEuOTguMF9idWZmZXJ1dGlsQDQuMC45X2VuY29kaW5nQDAuMS4xM191dGYtOC12YWxpZGF0ZUA1LjAuMTBfL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L21ldGFtYXNrLXNkay9saWIvZXNtL3N0YW5kYXJkL3NvbGFuYS5qcz80OTI5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgaXMgY29waWVkIGZyb20gQHNvbGFuYS93YWxsZXQtc3RhbmRhcmQtY2hhaW5zXG4vKiogU29sYW5hIE1haW5uZXQgKGJldGEpIGNsdXN0ZXIsIGUuZy4gaHR0cHM6Ly9hcGkubWFpbm5ldC1iZXRhLnNvbGFuYS5jb20gKi9cbmV4cG9ydCBjb25zdCBTT0xBTkFfTUFJTk5FVF9DSEFJTiA9ICdzb2xhbmE6bWFpbm5ldCc7XG4vKiogU29sYW5hIERldm5ldCBjbHVzdGVyLCBlLmcuIGh0dHBzOi8vYXBpLmRldm5ldC5zb2xhbmEuY29tICovXG5leHBvcnQgY29uc3QgU09MQU5BX0RFVk5FVF9DSEFJTiA9ICdzb2xhbmE6ZGV2bmV0Jztcbi8qKiBTb2xhbmEgVGVzdG5ldCBjbHVzdGVyLCBlLmcuIGh0dHBzOi8vYXBpLnRlc3RuZXQuc29sYW5hLmNvbSAqL1xuZXhwb3J0IGNvbnN0IFNPTEFOQV9URVNUTkVUX0NIQUlOID0gJ3NvbGFuYTp0ZXN0bmV0Jztcbi8qKiBTb2xhbmEgTG9jYWxuZXQgY2x1c3RlciwgZS5nLiBodHRwOi8vbG9jYWxob3N0Ojg4OTkgKi9cbmV4cG9ydCBjb25zdCBTT0xBTkFfTE9DQUxORVRfQ0hBSU4gPSAnc29sYW5hOmxvY2FsbmV0Jztcbi8qKiBBcnJheSBvZiBhbGwgU29sYW5hIGNsdXN0ZXJzICovXG5leHBvcnQgY29uc3QgU09MQU5BX0NIQUlOUyA9IFtcbiAgICBTT0xBTkFfTUFJTk5FVF9DSEFJTixcbiAgICBTT0xBTkFfREVWTkVUX0NIQUlOLFxuICAgIFNPTEFOQV9URVNUTkVUX0NIQUlOLFxuICAgIFNPTEFOQV9MT0NBTE5FVF9DSEFJTlxuXTtcbi8qKlxuICogQ2hlY2sgaWYgYSBjaGFpbiBjb3JyZXNwb25kcyB3aXRoIG9uZSBvZiB0aGUgU29sYW5hIGNsdXN0ZXJzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNTb2xhbmFDaGFpbihjaGFpbikge1xuICAgIHJldHVybiBTT0xBTkFfQ0hBSU5TLmluY2x1ZGVzKGNoYWluKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/solana.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/types.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/types.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNvbGZsYXJlLXdhbGxldCttZXRhbWFzay1zZGtAMS4wLjNfQHNvbGFuYSt3ZWIzLmpzQDEuOTguMF9idWZmZXJ1dGlsQDQuMC45X2VuY29kaW5nQDAuMS4xM191dGYtOC12YWxpZGF0ZUA1LjAuMTBfL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L21ldGFtYXNrLXNkay9saWIvZXNtL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7QUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL2N1c3RvbWVyLTEvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNvbGZsYXJlLXdhbGxldCttZXRhbWFzay1zZGtAMS4wLjNfQHNvbGFuYSt3ZWIzLmpzQDEuOTguMF9idWZmZXJ1dGlsQDQuMC45X2VuY29kaW5nQDAuMS4xM191dGYtOC12YWxpZGF0ZUA1LjAuMTBfL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L21ldGFtYXNrLXNkay9saWIvZXNtL3R5cGVzLmpzPzQwMzYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/utils.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/utils.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addSignature: () => (/* binding */ addSignature),\n/* harmony export */   isLegacyTransactionInstance: () => (/* binding */ isLegacyTransactionInstance),\n/* harmony export */   serializeTransaction: () => (/* binding */ serializeTransaction),\n/* harmony export */   serializeTransactionMessage: () => (/* binding */ serializeTransactionMessage)\n/* harmony export */ });\nfunction isLegacyTransactionInstance(transaction) {\n    return transaction.version === undefined;\n}\nfunction serializeTransaction(transaction) {\n    return isLegacyTransactionInstance(transaction)\n        ? transaction.serialize({\n            verifySignatures: false,\n            requireAllSignatures: false\n        })\n        : transaction.serialize();\n}\nfunction serializeTransactionMessage(transaction) {\n    return isLegacyTransactionInstance(transaction)\n        ? transaction.serializeMessage()\n        : transaction.message.serialize();\n}\nfunction addSignature(transaction, publicKey, signature) {\n    if (isLegacyTransactionInstance(transaction)) {\n        transaction.addSignature(publicKey, Buffer.from(signature));\n    }\n    else {\n        const signerPubkeys = transaction.message.staticAccountKeys.slice(0, transaction.message.header.numRequiredSignatures);\n        const signerIndex = signerPubkeys.findIndex((pubkey) => pubkey.equals(publicKey));\n        if (signerIndex >= 0) {\n            transaction.signatures[signerIndex] = signature;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNvbGZsYXJlLXdhbGxldCttZXRhbWFzay1zZGtAMS4wLjNfQHNvbGFuYSt3ZWIzLmpzQDEuOTguMF9idWZmZXJ1dGlsQDQuMC45X2VuY29kaW5nQDAuMS4xM191dGYtOC12YWxpZGF0ZUA1LjAuMTBfL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L21ldGFtYXNrLXNkay9saWIvZXNtL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3VzdG9tZXItMS8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac29sZmxhcmUtd2FsbGV0K21ldGFtYXNrLXNka0AxLjAuM19Ac29sYW5hK3dlYjMuanNAMS45OC4wX2J1ZmZlcnV0aWxANC4wLjlfZW5jb2RpbmdAMC4xLjEzX3V0Zi04LXZhbGlkYXRlQDUuMC4xMF8vbm9kZV9tb2R1bGVzL0Bzb2xmbGFyZS13YWxsZXQvbWV0YW1hc2stc2RrL2xpYi9lc20vdXRpbHMuanM/MTMzNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNMZWdhY3lUcmFuc2FjdGlvbkluc3RhbmNlKHRyYW5zYWN0aW9uKSB7XG4gICAgcmV0dXJuIHRyYW5zYWN0aW9uLnZlcnNpb24gPT09IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemVUcmFuc2FjdGlvbih0cmFuc2FjdGlvbikge1xuICAgIHJldHVybiBpc0xlZ2FjeVRyYW5zYWN0aW9uSW5zdGFuY2UodHJhbnNhY3Rpb24pXG4gICAgICAgID8gdHJhbnNhY3Rpb24uc2VyaWFsaXplKHtcbiAgICAgICAgICAgIHZlcmlmeVNpZ25hdHVyZXM6IGZhbHNlLFxuICAgICAgICAgICAgcmVxdWlyZUFsbFNpZ25hdHVyZXM6IGZhbHNlXG4gICAgICAgIH0pXG4gICAgICAgIDogdHJhbnNhY3Rpb24uc2VyaWFsaXplKCk7XG59XG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplVHJhbnNhY3Rpb25NZXNzYWdlKHRyYW5zYWN0aW9uKSB7XG4gICAgcmV0dXJuIGlzTGVnYWN5VHJhbnNhY3Rpb25JbnN0YW5jZSh0cmFuc2FjdGlvbilcbiAgICAgICAgPyB0cmFuc2FjdGlvbi5zZXJpYWxpemVNZXNzYWdlKClcbiAgICAgICAgOiB0cmFuc2FjdGlvbi5tZXNzYWdlLnNlcmlhbGl6ZSgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFkZFNpZ25hdHVyZSh0cmFuc2FjdGlvbiwgcHVibGljS2V5LCBzaWduYXR1cmUpIHtcbiAgICBpZiAoaXNMZWdhY3lUcmFuc2FjdGlvbkluc3RhbmNlKHRyYW5zYWN0aW9uKSkge1xuICAgICAgICB0cmFuc2FjdGlvbi5hZGRTaWduYXR1cmUocHVibGljS2V5LCBCdWZmZXIuZnJvbShzaWduYXR1cmUpKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IHNpZ25lclB1YmtleXMgPSB0cmFuc2FjdGlvbi5tZXNzYWdlLnN0YXRpY0FjY291bnRLZXlzLnNsaWNlKDAsIHRyYW5zYWN0aW9uLm1lc3NhZ2UuaGVhZGVyLm51bVJlcXVpcmVkU2lnbmF0dXJlcyk7XG4gICAgICAgIGNvbnN0IHNpZ25lckluZGV4ID0gc2lnbmVyUHVia2V5cy5maW5kSW5kZXgoKHB1YmtleSkgPT4gcHVia2V5LmVxdWFscyhwdWJsaWNLZXkpKTtcbiAgICAgICAgaWYgKHNpZ25lckluZGV4ID49IDApIHtcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uLnNpZ25hdHVyZXNbc2lnbmVySW5kZXhdID0gc2lnbmF0dXJlO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.0_bufferutil@4.0.9_encoding@0.1.13_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/utils.js\n");

/***/ })

};
;